name: "Build sysexts: Fedora Kinoite (41)"

env:
  IMAGE: 'quay.io/fedora-ostree-desktops/kinoite:41'
  RELEASE: '41'
  NAME: 'Fedora Kinoite (41)'
  SHORTNAME: 'fedora-kinoite'
  GH_TOKEN: ${{ github.token }}

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
  schedule:
    - cron:  '0 0 * * MON'
  workflow_dispatch:

# Needed to allow creating a release
permissions:
  contents: write

# Prevent multiple workflow runs from racing to ensure that pushes are made
# sequentialy for the main branch. Also cancel in progress workflow runs.
concurrency:
  group: ${{ github.workflow }}-${{ github.ref || github.run_id }}-${{ inputs.sysext }}

jobs:
  build:
    runs-on: "ubuntu-24.04"
    container:
      image: "quay.io/fedora/fedora:41"
      options: "--privileged --security-opt label=disable --user 0:0"
    steps:
      - name: "Install tools"
        run: |
          dnf install -y \
            cpio \
            dnf5-plugins \
            erofs-utils \
            git \
            jq \
            just \
            podman \
            wget
          dnf config-manager addrepo --from-repofile="https://cli.github.com/packages/rpm/gh-cli.repo"
          dnf install -y gh --repo gh-cli

      - name: "Checkout repo"
        uses: actions/checkout@v4

      - name: "Setup artifacts directory"
        run: |
          mkdir -p artifacts

      - name: "Build sysext: btop"
        env:
          SYSEXT: btop
        run: |
          cd "${SYSEXT}"
          just build ${IMAGE}
          mv "${SYSEXT}"*".raw" "../artifacts/"

      - name: "Build sysext: distrobox"
        env:
          SYSEXT: distrobox
        run: |
          cd "${SYSEXT}"
          just build ${IMAGE}
          mv "${SYSEXT}"*".raw" "../artifacts/"

      - name: "Build sysext: htop"
        env:
          SYSEXT: htop
        run: |
          cd "${SYSEXT}"
          just build ${IMAGE}
          mv "${SYSEXT}"*".raw" "../artifacts/"

      - name: "Build sysext: ripgrep"
        env:
          SYSEXT: ripgrep
        run: |
          cd "${SYSEXT}"
          just build ${IMAGE}
          mv "${SYSEXT}"*".raw" "../artifacts/"

      - name: "Build sysext: steam-devices"
        env:
          SYSEXT: steam-devices
        run: |
          cd "${SYSEXT}"
          just build ${IMAGE}
          mv "${SYSEXT}"*".raw" "../artifacts/"

      - name: "Build sysext: steam"
        env:
          SYSEXT: steam
        run: |
          cd "${SYSEXT}"
          just build ${IMAGE}
          mv "${SYSEXT}"*".raw" "../artifacts/"

      - name: "Build sysext: tree"
        env:
          SYSEXT: tree
        run: |
          cd "${SYSEXT}"
          just build ${IMAGE}
          mv "${SYSEXT}"*".raw" "../artifacts/"

      - name: "Build sysext: vscode"
        env:
          SYSEXT: vscode
        run: |
          cd "${SYSEXT}"
          just build ${IMAGE}
          mv "${SYSEXT}"*".raw" "../artifacts/"

      # - name: "Build sysext: vscodium"
      #   env:
      #     SYSEXT: vscodium
      #   run: |
      #     cd "${SYSEXT}"
      #     just build ${IMAGE}
      #     mv "${SYSEXT}"*".raw" "../artifacts/"

      - name: "Build sysext: zoxide"
        env:
          SYSEXT: zoxide
        run: |
          cd "${SYSEXT}"
          just build ${IMAGE}
          mv "${SYSEXT}"*".raw" "../artifacts/"

      - name: "Build sysext: zsh"
        env:
          SYSEXT: zsh
        run: |
          cd "${SYSEXT}"
          just build ${IMAGE}
          mv "${SYSEXT}"*".raw" "../artifacts/"

      - name: Upload sysexts as artifacts
        if: github.event_name == 'pull_request'
        uses: actions/upload-artifact@v4
        with:
          name: sysexts
          path: artifacts/
          retention-days: 5
          compression-level: 0
          overwrite: true

      - name: Create a release with a SHA256SUMS manifest and systemd-sysupdate configs
        if: (github.event_name == 'push' || github.event_name == 'schedule' || github.event_name == 'workflow_dispatch') && github.ref == 'refs/heads/main'
        run: |
          git config --global --add safe.directory "${PWD}"

          cd ./artifacts

          sha256sum *.raw > SHA256SUMS

          sysexts=()
          for s in $(ls *.raw); do
              s="${s%-*-x86-64.raw}"
              sed "s/%%SYSEXT%%/${s}/g" ../templates/systemd-sysupdate.conf > ${s}.conf
          done

          gh release delete \
            --cleanup-tag \
            --yes \
            "${SHORTNAME}-${RELEASE}" \
            || true

          # TODO: Handle --latest
          gh release create \
            --title "${NAME} sysexts" \
            --notes "System extensions for ${NAME}" \
            "${SHORTNAME}-${RELEASE}" \
            ./*
